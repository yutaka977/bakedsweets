<h1>GeekTwitter</h1>
<h3>新規投稿</h3>
<%= form_for @tweet do |f| %>
  <div class="field">
        <div class="actions">
    <%= f.label :body,"店名" %>
    <%= f.text_field :body,id:"outputBox" %>
    <%= f.label :lat,"緯度" %>
    <%= f.text_field :lat,:value =>"緯度", id: :lat %>
    <%= f.label :lng,"経度" %>
    <%= f.text_field :lng,:value =>"経度", id: :lng %>
  </div>
    <br>
    <%= f.label :価格 %>
    <%= f.text_field :cost,size: 25 ,placeholder:"半角数字を入力してください"%>
    <%= f.label :円 %>
    <br>
    <%= f.label :種類 %> <%= f.collection_select(:type_id, Type.all, :id, :name, { prompt: '選択してください'}, { class: 'form-select'}) %>
    
 <div>

    <%= text_field_tag :new_type_name, nil, class: 'form-control',placeholder:"新しい種類を追加" %>
    <font size="2"> ※ 選択肢がない場合は、ここに入力してください。 </font>
 </div>
    <br>
    <%= f.label :評価 %>
    <br>
<div>
  <%= f.label :美味しさ %>
  <br>
  1<%= f.range_field :taste, min: 1, max: 5,step: 0.5 ,value:3, id: 'range-taste' %>5
  <span id="current-value-taste"></span>
</div>

<div>
  <%= f.label :価格 %>
  <br>
  1<%= f.range_field :evaluationcost,min: 1, max: 5,step: 0.5 ,value:3, id: 'range-evaluationcost' %>5
  <span id="current-value-evaluationcost"></span>
</div>

<div>
  <%= f.label :アクセスの良さ %>
  <br>
  1<%= f.range_field :access, min: 1, max: 5,step: 0.5 ,value:3, id: 'range-access' %>5
  <span id="current-value-access"></span>
</div>


              
    <br>
    <%= f.text_field :evaluation,size: 25 %>
  </div>
  <div class="field">
    <%= f.label :写真 %>
    <%= f.file_field :images, multiple: true %>


  </div>


  <%= f.submit "投稿する" %>
<% end %>




<h2>Map</h2>
<p>店名を入力し、検索を押すと位置情報の登録ができます。<p>
<input id="address" type="textbox" placeholder="店名を入力してください">

<input type="button" value="検索" onclick="codeAddress()">
<p>マーカーをドラック＆ドロップで位置の調整ができます。<p>
<div id='map'></div>

<style>
#map {
  height: 600px;
  width: 600px;
}
</style>

<script>
//初期マップの設定
let map
let marker
function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    center:  {lat: 35.0223, lng:135.9617},  //滋賀県草津市
    zoom: 15,
    
  });
}

//検索後のマップ作成
let geocoder
let aft
function codeAddress(){
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
        //マーカーが複数できないようにする
        if (aft == true){
            marker.setMap(null);
        }

        //新しくマーカーを作成する
        map.setCenter(results[0].geometry.location);
            marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location,
            draggable: true	// ドラッグ可能にする
        });

        //二度目以降か判断
        aft = true

        //検索した時に緯度経度を入力する
        document.getElementById('lat').value = results[0].geometry.location.lat();
        document.getElementById('lng').value = results[0].geometry.location.lng();

        // マーカーのドロップ（ドラッグ終了）時のイベント
        google.maps.event.addListener( marker, 'dragend', function(ev){
            // イベントの引数evの、プロパティ.latLngが緯度経度
            document.getElementById('lat').value = ev.latLng.lat();
            document.getElementById('lng').value = ev.latLng.lng();
        });
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });   
}



</script>

<script type="text/javascript">

document.addEventListener("turbo:load", () => {
  // 各range_fieldと対応する表示要素を設定
  const fields = [

    { id: 'range-taste', spanId: 'current-value-taste' },
    { id: 'range-evaluationcost', spanId: 'current-value-evaluationcost' },
    { id: 'range-access', spanId: 'current-value-access' }
  ];

  // 汎用的に値を更新する関数
  const setFieldValue = (fieldId, spanId) => {
    const fieldElem = document.getElementById(fieldId);
    const spanElem = document.getElementById(spanId);

    const updateValue = () => {
      spanElem.innerText = `${fieldElem.value}`;
    };

    // イベントリスナーの追加
    fieldElem.addEventListener('input', updateValue);

    // 初期値の設定
    updateValue();
  };

  // 各fieldについて処理を適用
  fields.forEach(({ id, spanId }) => setFieldValue(id, spanId));
});


  const inputBox = document.getElementById("address");
  const outputBox = document.getElementById("outputBox");
  if (outputBox.value === "") {
  inputBox.addEventListener("input", function () {
    outputBox.value = inputBox.value;
  });
};
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['YOUR_API_KEY'] %>&callback=initMap" async defer></script>

<%= link_to "投稿一覧に戻る", tweets_path %>



